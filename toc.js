// Populate the sidebar
//
// This is a script, and not included directly in the page, to control the total size of the book.
// The TOC contains an entry for each page, so if each page includes a copy of the TOC,
// the total size of the page becomes O(n**2).
class MDBookSidebarScrollbox extends HTMLElement {
    constructor() {
        super();
    }
    connectedCallback() {
        this.innerHTML = '<ol class="chapter"><li class="chapter-item "><a href="welcome.html"><strong aria-hidden="true">1.</strong> Welcome</a></li><li class="chapter-item "><a href="CHARTER.html"><strong aria-hidden="true">2.</strong> Charter</a></li><li class="chapter-item "><a href="meetings.html"><strong aria-hidden="true">3.</strong> Meetings</a><a class="toggle"><div>‚ù±</div></a></li><li><ol class="section"><li class="chapter-item "><a href="https://github.com/orgs/rust-lang/projects/40/views/1.html"><strong aria-hidden="true">3.1.</strong> Discussion schedule</a></li><li class="chapter-item "><a href="triage.html"><strong aria-hidden="true">3.2.</strong> Triage</a></li></ol></li><li class="chapter-item "><a href="vision.html"><strong aria-hidden="true">4.</strong> The vision</a><a class="toggle"><div>‚ù±</div></a></li><li><ol class="section"><li class="chapter-item "><a href="vision/how_to_vision.html"><strong aria-hidden="true">4.1.</strong> ‚ùìHow to vision</a><a class="toggle"><div>‚ù±</div></a></li><li><ol class="section"><li class="chapter-item "><a href="vision/how_to_vision/owners.html"><strong aria-hidden="true">4.1.1.</strong> Owning a goal or initiative</a></li><li class="chapter-item "><a href="vision/how_to_vision/stakeholders.html"><strong aria-hidden="true">4.1.2.</strong> Being a stakeholder</a></li><li class="chapter-item "><a href="vision/how_to_vision/evaluations.html"><strong aria-hidden="true">4.1.3.</strong> Writing an evaluation</a></li><li class="chapter-item "><a href="vision/how_to_vision/status_quo.html"><strong aria-hidden="true">4.1.4.</strong> Authoring "Status quo" stories</a></li><li class="chapter-item "><a href="vision/how_to_vision/shiny_future.html"><strong aria-hidden="true">4.1.5.</strong> Authoring "Shiny future" stories</a></li><li class="chapter-item "><a href="vision/how_to_vision/comment.html"><strong aria-hidden="true">4.1.6.</strong> Commenting on stories</a></li><li class="chapter-item "><a href="vision/how_to_vision/awards.html"><strong aria-hidden="true">4.1.7.</strong> Awards</a></li></ol></li><li class="chapter-item "><a href="vision/how_it_feels.html"><strong aria-hidden="true">4.2.</strong> ü•∞ How using async Rust ought to feel</a></li><li class="chapter-item "><a href="vision/characters.html"><strong aria-hidden="true">4.3.</strong> üôã‚Äç‚ôÄÔ∏è Cast of characters</a><a class="toggle"><div>‚ù±</div></a></li><li><ol class="section"><li class="chapter-item "><a href="vision/characters/alan.html"><strong aria-hidden="true">4.3.1.</strong> Alan</a></li><li class="chapter-item "><a href="vision/characters/grace.html"><strong aria-hidden="true">4.3.2.</strong> Grace</a></li><li class="chapter-item "><a href="vision/characters/niklaus.html"><strong aria-hidden="true">4.3.3.</strong> Niklaus</a></li><li class="chapter-item "><a href="vision/characters/barbara.html"><strong aria-hidden="true">4.3.4.</strong> Barbara</a></li></ol></li><li class="chapter-item "><a href="vision/projects.html"><strong aria-hidden="true">4.4.</strong> ‚ö° Projects</a><a class="toggle"><div>‚ù±</div></a></li><li><ol class="section"><li class="chapter-item "><a href="vision/projects/template.html"><strong aria-hidden="true">4.4.1.</strong> Template</a></li><li class="chapter-item "><a href="vision/projects/MonsterMesh.html"><strong aria-hidden="true">4.4.2.</strong> MonsterMesh (embedded sensors)</a></li><li class="chapter-item "><a href="vision/projects/DistriData.html"><strong aria-hidden="true">4.4.3.</strong> DistriData (Generic Infrastructure)</a></li><li class="chapter-item "><a href="vision/projects/TrafficMonitor.html"><strong aria-hidden="true">4.4.4.</strong> TrafficMonitor (Custom Infrastructure)</a></li><li class="chapter-item "><a href="vision/projects/YouBuy.html"><strong aria-hidden="true">4.4.5.</strong> YouBuy (Traditional Server Application)</a></li><li class="chapter-item "><a href="vision/projects/SLOW.html"><strong aria-hidden="true">4.4.6.</strong> SLOW (Protocol implementation)</a></li></ol></li><li class="chapter-item "><a href="vision/status_quo.html"><strong aria-hidden="true">4.5.</strong> üò± Status quo</a></li><li class="chapter-item "><a href="vision/shiny_future.html"><strong aria-hidden="true">4.6.</strong> ‚ú® Shiny future</a><a class="toggle"><div>‚ù±</div></a></li><li><ol class="section"><li class="chapter-item "><a href="vision/shiny_future/users_manual.html"><strong aria-hidden="true">4.6.1.</strong> üìö User&#39;s manual of the future</a></li></ol></li><li class="chapter-item "><a href="vision/roadmap.html"><strong aria-hidden="true">4.7.</strong> üìÖ Roadmap</a><a class="toggle"><div>‚ù±</div></a></li><li><ol class="section"><li class="chapter-item "><a href="vision/roadmap/async_fn.html"><strong aria-hidden="true">4.7.1.</strong> Async fn everywhere</a><a class="toggle"><div>‚ù±</div></a></li><li><ol class="section"><li class="chapter-item "><a href="vision/roadmap/async_fn/boxable.html"><strong aria-hidden="true">4.7.1.1.</strong> Boxable async fn</a></li><li class="chapter-item "><a href="vision/roadmap/async_fn/async_main_and_tests.html"><strong aria-hidden="true">4.7.1.2.</strong> Async main and tests</a></li></ol></li><li class="chapter-item "><a href="vision/roadmap/scopes.html"><strong aria-hidden="true">4.7.2.</strong> Scoped spawn and reliable cancellation</a><a class="toggle"><div>‚ù±</div></a></li><li><ol class="section"><li class="chapter-item "><a href="vision/roadmap/scopes/capability.html"><strong aria-hidden="true">4.7.2.1.</strong> Capability</a><a class="toggle"><div>‚ù±</div></a></li><li><ol class="section"><li class="chapter-item "><a href="vision/roadmap/scopes/capability/variant_async_trait.html"><strong aria-hidden="true">4.7.2.1.1.</strong> Variant: Async trait</a></li><li class="chapter-item "><a href="vision/roadmap/scopes/capability/variant_leak.html"><strong aria-hidden="true">4.7.2.1.2.</strong> Variant: Leak trait</a></li></ol></li><li class="chapter-item "><a href="vision/roadmap/scopes/scope_api.html"><strong aria-hidden="true">4.7.2.2.</strong> Scope API</a></li></ol></li><li class="chapter-item "><a href="vision/roadmap/async_iter.html"><strong aria-hidden="true">4.7.3.</strong> Async iteration</a><a class="toggle"><div>‚ù±</div></a></li><li><ol class="section"><li class="chapter-item "><a href="vision/roadmap/async_iter/traits.html"><strong aria-hidden="true">4.7.3.1.</strong> Traits</a></li><li class="chapter-item "><a href="vision/roadmap/async_iter/generators.html"><strong aria-hidden="true">4.7.3.2.</strong> Generators</a></li></ol></li><li class="chapter-item "><a href="vision/roadmap/portable.html"><strong aria-hidden="true">4.7.4.</strong> Portable and interoperable</a><a class="toggle"><div>‚ù±</div></a></li><li><ol class="section"><li class="chapter-item "><a href="vision/roadmap/portable/read_write.html"><strong aria-hidden="true">4.7.4.1.</strong> Read/write traits</a></li><li class="chapter-item "><a href="vision/roadmap/portable/timers.html"><strong aria-hidden="true">4.7.4.2.</strong> Timers</a></li><li class="chapter-item "><a href="vision/roadmap/portable/spawn.html"><strong aria-hidden="true">4.7.4.3.</strong> Spawn</a></li><li class="chapter-item "><a href="vision/roadmap/portable/runtime.html"><strong aria-hidden="true">4.7.4.4.</strong> Runtime</a></li></ol></li><li class="chapter-item "><a href="vision/roadmap/polish.html"><strong aria-hidden="true">4.7.5.</strong> Polish</a><a class="toggle"><div>‚ù±</div></a></li><li><ol class="section"><li class="chapter-item "><a href="vision/roadmap/polish/lint_must_not_suspend.html"><strong aria-hidden="true">4.7.5.1.</strong> must_not_suspend lint</a></li><li class="chapter-item "><a href="vision/roadmap/polish/lint_blocking_fns.html"><strong aria-hidden="true">4.7.5.2.</strong> Lint blocking fns</a></li><li class="chapter-item "><a href="vision/roadmap/polish/lint_large_copies.html"><strong aria-hidden="true">4.7.5.3.</strong> Lint large copies</a></li><li class="chapter-item "><a href="vision/roadmap/polish/error_messages.html"><strong aria-hidden="true">4.7.5.4.</strong> Error messages for the most confusing scenarios</a></li><li class="chapter-item "><a href="vision/roadmap/polish/stacktraces.html"><strong aria-hidden="true">4.7.5.5.</strong> Stacktraces</a></li><li class="chapter-item "><a href="vision/roadmap/polish/precise_generator_captures.html"><strong aria-hidden="true">4.7.5.6.</strong> Precise Generator Captures</a></li><li class="chapter-item "><a href="vision/roadmap/polish/sync_and_async.html"><strong aria-hidden="true">4.7.5.7.</strong> Sync and async behave the same</a></li></ol></li><li class="chapter-item "><a href="vision/roadmap/tooling.html"><strong aria-hidden="true">4.7.6.</strong> Tooling</a><a class="toggle"><div>‚ù±</div></a></li><li><ol class="section"><li class="chapter-item "><a href="vision/roadmap/tooling/crashdump.html"><strong aria-hidden="true">4.7.6.1.</strong> Crashdump</a></li></ol></li><li class="chapter-item "><a href="vision/roadmap/testing.html"><strong aria-hidden="true">4.7.7.</strong> Testing</a></li><li class="chapter-item "><a href="vision/roadmap/documentation.html"><strong aria-hidden="true">4.7.8.</strong> Documentation</a><a class="toggle"><div>‚ù±</div></a></li><li><ol class="section"><li class="chapter-item "><a href="vision/roadmap/documentation/async_book.html"><strong aria-hidden="true">4.7.8.1.</strong> Async book</a></li></ol></li><li class="chapter-item "><a href="vision/roadmap/threadsafe_portability.html"><strong aria-hidden="true">4.7.9.</strong> Threadsafe portability</a></li><li class="chapter-item "><a href="vision/roadmap/async_overloading.html"><strong aria-hidden="true">4.7.10.</strong> Async overloading</a></li></ol></li><li class="chapter-item "><a href="vision/unresolved_questions.html"><strong aria-hidden="true">4.8.</strong> ‚ùì Major unresolved questions or controversies</a><a class="toggle"><div>‚ù±</div></a></li><li><ol class="section"><li class="chapter-item "><a href="vision/unresolved_questions/default_runtime.html"><strong aria-hidden="true">4.8.1.</strong> Default runtime?</a></li><li class="chapter-item "><a href="vision/unresolved_questions/async_fn.html"><strong aria-hidden="true">4.8.2.</strong> How to represent the AsyncFn traits?</a></li><li class="chapter-item "><a href="vision/unresolved_questions/cancellation.html"><strong aria-hidden="true">4.8.3.</strong> How best to integrate voluntary cancellation?</a></li><li class="chapter-item "><a href="vision/unresolved_questions/portable_without_generics.html"><strong aria-hidden="true">4.8.4.</strong> Extend stdlib to permit portable async without generics?</a></li><li class="chapter-item "><a href="vision/unresolved_questions/await_or_not.html"><strong aria-hidden="true">4.8.5.</strong> To await or not to await?</a></li></ol></li><li class="chapter-item "><a href="vision/submitted_stories.html"><strong aria-hidden="true">4.9.</strong> üíù Appendix: Submitted stories</a><a class="toggle"><div>‚ù±</div></a></li><li><ol class="section"><li class="chapter-item "><a href="vision/submitted_stories/status_quo.html"><strong aria-hidden="true">4.9.1.</strong> üò± Status quo</a><a class="toggle"><div>‚ù±</div></a></li><li><ol class="section"><li class="chapter-item "><a href="vision/submitted_stories/status_quo/template.html"><strong aria-hidden="true">4.9.1.1.</strong> Template</a></li><li class="chapter-item "><a href="vision/submitted_stories/status_quo/alan_builds_a_task_scheduler.html"><strong aria-hidden="true">4.9.1.2.</strong> Alan builds a task scheduler</a></li><li class="chapter-item "><a href="vision/submitted_stories/status_quo/alan_creates_a_hanging_alarm.html"><strong aria-hidden="true">4.9.1.3.</strong> Alan creates a hanging alarm</a></li><li class="chapter-item "><a href="vision/submitted_stories/status_quo/alan_finds_database_drops_hard.html"><strong aria-hidden="true">4.9.1.4.</strong> Alan finds dropping database handles is hard</a></li><li class="chapter-item "><a href="vision/submitted_stories/status_quo/alan_has_an_event_loop.html"><strong aria-hidden="true">4.9.1.5.</strong> Alan has an external event loop</a></li><li class="chapter-item "><a href="vision/submitted_stories/status_quo/alan_hates_writing_a_stream.html"><strong aria-hidden="true">4.9.1.6.</strong> Alan hates writing a Stream</a></li><li class="chapter-item "><a href="vision/submitted_stories/status_quo/alan_iteratively_regresses.html"><strong aria-hidden="true">4.9.1.7.</strong> Alan iteratively regresses performance</a></li><li class="chapter-item "><a href="vision/submitted_stories/status_quo/alan_lost_the_world.html"><strong aria-hidden="true">4.9.1.8.</strong> Alan lost the world</a></li><li class="chapter-item "><a href="vision/submitted_stories/status_quo/alan_misses_c_sharp_async.html"><strong aria-hidden="true">4.9.1.9.</strong> Alan misses C# async</a></li><li class="chapter-item "><a href="vision/submitted_stories/status_quo/alan_needs_async_in_traits.html"><strong aria-hidden="true">4.9.1.10.</strong> Alan needs async in traits</a></li><li class="chapter-item "><a href="vision/submitted_stories/status_quo/alan_runs_into_stack_trouble.html"><strong aria-hidden="true">4.9.1.11.</strong> Alan runs into stack trouble</a></li><li class="chapter-item "><a href="vision/submitted_stories/status_quo/alan_started_trusting_the_rust_compiler_but_then_async.html"><strong aria-hidden="true">4.9.1.12.</strong> Alan started trusting the Rust compiler, but then... async</a></li><li class="chapter-item "><a href="vision/submitted_stories/status_quo/alan_thinks_he_needs_async_locks.html"><strong aria-hidden="true">4.9.1.13.</strong> Alan thinks he needs async locks</a></li><li class="chapter-item "><a href="vision/submitted_stories/status_quo/alan_tries_a_socket_sink.html"><strong aria-hidden="true">4.9.1.14.</strong> Alan tries using a socket Sink</a></li><li class="chapter-item "><a href="vision/submitted_stories/status_quo/alan_tries_to_debug_a_hang.html"><strong aria-hidden="true">4.9.1.15.</strong> Alan tries to debug a hang</a></li><li class="chapter-item "><a href="vision/submitted_stories/status_quo/alan_builds_a_cache.html"><strong aria-hidden="true">4.9.1.16.</strong> Alan tries to cache requests, which doesn&#39;t always happen</a></li><li class="chapter-item "><a href="vision/submitted_stories/status_quo/alan_tries_processing_some_files.html"><strong aria-hidden="true">4.9.1.17.</strong> Alan tries tries processing some files</a></li><li class="chapter-item "><a href="vision/submitted_stories/status_quo/alan_wants_prefetch_iterator.html"><strong aria-hidden="true">4.9.1.18.</strong> Alan wants a prefetch iterator</a></li><li class="chapter-item "><a href="vision/submitted_stories/status_quo/alan_picks_web_server.html"><strong aria-hidden="true">4.9.1.19.</strong> Alan wants to migrate a web server to Rust</a></li><li class="chapter-item "><a href="vision/submitted_stories/status_quo/alan_writes_a_web_framework.html"><strong aria-hidden="true">4.9.1.20.</strong> Alan writes a web framework</a></li><li class="chapter-item "><a href="vision/submitted_stories/status_quo/aws_engineer.html"><strong aria-hidden="true">4.9.1.21.</strong> Alan extends an AWS service</a><a class="toggle"><div>‚ù±</div></a></li><li><ol class="section"><li class="chapter-item "><a href="vision/submitted_stories/status_quo/aws_engineer/writing_a_java_based_service.html"><strong aria-hidden="true">4.9.1.21.1.</strong> Writing a Java-based service at AWS</a></li><li class="chapter-item "><a href="vision/submitted_stories/status_quo/aws_engineer/getting_started_with_rust.html"><strong aria-hidden="true">4.9.1.21.2.</strong> Getting started with Rust</a></li><li class="chapter-item "><a href="vision/submitted_stories/status_quo/aws_engineer/coming_from_java.html"><strong aria-hidden="true">4.9.1.21.3.</strong> Coming from Java</a></li><li class="chapter-item "><a href="vision/submitted_stories/status_quo/aws_engineer/ecosystem.html"><strong aria-hidden="true">4.9.1.21.4.</strong> Exploring the ecosystem</a></li><li class="chapter-item "><a href="vision/submitted_stories/status_quo/aws_engineer/juggling_error_handling.html"><strong aria-hidden="true">4.9.1.21.5.</strong> Juggling error handling</a></li><li class="chapter-item "><a href="vision/submitted_stories/status_quo/aws_engineer/failure_to_parallelize.html"><strong aria-hidden="true">4.9.1.21.6.</strong> Failure to parallelize</a></li><li class="chapter-item "><a href="vision/submitted_stories/status_quo/aws_engineer/borrow_check_errors.html"><strong aria-hidden="true">4.9.1.21.7.</strong> Borrow check errors</a></li><li class="chapter-item "><a href="vision/submitted_stories/status_quo/aws_engineer/solving_a_deadlock.html"><strong aria-hidden="true">4.9.1.21.8.</strong> Solving a deadlock</a></li><li class="chapter-item "><a href="vision/submitted_stories/status_quo/aws_engineer/encountering_pin.html"><strong aria-hidden="true">4.9.1.21.9.</strong> Encoutering pin</a></li><li class="chapter-item "><a href="vision/submitted_stories/status_quo/aws_engineer/figuring_out_the_best_option.html"><strong aria-hidden="true">4.9.1.21.10.</strong> Figuring out the best option</a></li><li class="chapter-item "><a href="vision/submitted_stories/status_quo/aws_engineer/testing_the_service.html"><strong aria-hidden="true">4.9.1.21.11.</strong> Testing his service</a></li><li class="chapter-item "><a href="vision/submitted_stories/status_quo/aws_engineer/using_the_debugger.html"><strong aria-hidden="true">4.9.1.21.12.</strong> Using the debugger</a></li><li class="chapter-item "><a href="vision/submitted_stories/status_quo/aws_engineer/missed_waker_leads_to_lost_performance.html"><strong aria-hidden="true">4.9.1.21.13.</strong> Missed Waker leads to lost performance</a></li><li class="chapter-item "><a href="vision/submitted_stories/status_quo/aws_engineer/debugging_performance_problems.html"><strong aria-hidden="true">4.9.1.21.14.</strong> Debugging performance problems</a></li><li class="chapter-item "><a href="vision/submitted_stories/status_quo/aws_engineer/getting_ready_to_deploy.html"><strong aria-hidden="true">4.9.1.21.15.</strong> Getting ready to deply</a></li><li class="chapter-item "><a href="vision/submitted_stories/status_quo/aws_engineer/using_jni.html"><strong aria-hidden="true">4.9.1.21.16.</strong> Using JNI</a></li></ol></li><li class="chapter-item "><a href="vision/submitted_stories/status_quo/barbara_anguishes_over_http.html"><strong aria-hidden="true">4.9.1.22.</strong> Barbara anguishes over HTTP</a></li><li class="chapter-item "><a href="vision/submitted_stories/status_quo/barbara_wants_single_threaded_optimizations.html"><strong aria-hidden="true">4.9.1.23.</strong> Barbara awants single threaded optimizations</a></li><li class="chapter-item "><a href="vision/submitted_stories/status_quo/barbara_battles_buffered_streams.html"><strong aria-hidden="true">4.9.1.24.</strong> Barbara battles buffered streams</a></li><li class="chapter-item "><a href="vision/submitted_stories/status_quo/barbara_benchmarks_async_trait.html"><strong aria-hidden="true">4.9.1.25.</strong> Barbara begets backpressure and benchmarks async_trait</a></li><li class="chapter-item "><a href="vision/submitted_stories/status_quo/barbara_bridges_sync_and_async.html"><strong aria-hidden="true">4.9.1.26.</strong> Barbara bridges sync and async in perf.rust-lang.org</a></li><li class="chapter-item "><a href="vision/submitted_stories/status_quo/barbara_builds_an_async_executor.html"><strong aria-hidden="true">4.9.1.27.</strong> Barbara builds an async executor</a></li><li class="chapter-item "><a href="vision/submitted_stories/status_quo/barbara_carefully_dismisses_embedded_future.html"><strong aria-hidden="true">4.9.1.28.</strong> Barbara carefully dismisses embedded Future</a></li><li class="chapter-item "><a href="vision/submitted_stories/status_quo/barbara_compares_some_cpp_code.html"><strong aria-hidden="true">4.9.1.29.</strong> Barbara compares some C++ code</a></li><li class="chapter-item "><a href="vision/submitted_stories/status_quo/barbara_gets_burned_by_select.html"><strong aria-hidden="true">4.9.1.30.</strong> Barbara gets burned by select</a></li><li class="chapter-item "><a href="vision/submitted_stories/status_quo/barbara_makes_their_first_steps_into_async.html"><strong aria-hidden="true">4.9.1.31.</strong> Barbara makes their first foray into async</a></li><li class="chapter-item "><a href="vision/submitted_stories/status_quo/barbara_needs_async_helpers.html"><strong aria-hidden="true">4.9.1.32.</strong> Barbara needs Async Helpers</a></li><li class="chapter-item "><a href="vision/submitted_stories/status_quo/barbara_plays_with_async.html"><strong aria-hidden="true">4.9.1.33.</strong> Barbara plays with async</a></li><li class="chapter-item "><a href="vision/submitted_stories/status_quo/barbara_polls_a_mutex.html"><strong aria-hidden="true">4.9.1.34.</strong> Barbara polls a Mutex</a></li><li class="chapter-item "><a href="vision/submitted_stories/status_quo/barbara_tries_async_streams.html"><strong aria-hidden="true">4.9.1.35.</strong> Barbara tries async streams</a></li><li class="chapter-item "><a href="vision/submitted_stories/status_quo/barbara_tries_unix_socket.html"><strong aria-hidden="true">4.9.1.36.</strong> Barbara tries Unix socket</a></li><li class="chapter-item "><a href="vision/submitted_stories/status_quo/barbara_trims_a_stacktrace.html"><strong aria-hidden="true">4.9.1.37.</strong> Barbara trims a stacktrace</a></li><li class="chapter-item "><a href="vision/submitted_stories/status_quo/barbara_wants_async_insights.html"><strong aria-hidden="true">4.9.1.38.</strong> Barbara wants async insights</a></li><li class="chapter-item "><a href="vision/submitted_stories/status_quo/barbara_wants_to_use_ghostcell.html"><strong aria-hidden="true">4.9.1.39.</strong> Barbara wants to use GhostCell-like cell borrowing</a></li><li class="chapter-item "><a href="vision/submitted_stories/status_quo/barbara_wishes_for_easy_runtime_switch.html"><strong aria-hidden="true">4.9.1.40.</strong> Barbara wishes for an easy runtim switch</a></li><li class="chapter-item "><a href="vision/submitted_stories/status_quo/barbara_writes_a_runtime_agnostic_lib.html"><strong aria-hidden="true">4.9.1.41.</strong> Barbara writes a runtime-agnostic library</a></li><li class="chapter-item "><a href="vision/submitted_stories/status_quo/grace_debugs_a_crash_dump.html"><strong aria-hidden="true">4.9.1.42.</strong> Grace debugs a crash dump</a></li><li class="chapter-item "><a href="vision/submitted_stories/status_quo/grace_deploys_her_service.html"><strong aria-hidden="true">4.9.1.43.</strong> Grace deploys her service and hits obstacles</a></li><li class="chapter-item "><a href="vision/submitted_stories/status_quo/grace_tries_new_libraries.html"><strong aria-hidden="true">4.9.1.44.</strong> Grace tries new libraries</a></li><li class="chapter-item "><a href="vision/submitted_stories/status_quo/grace_waits_for_gdb_next.html"><strong aria-hidden="true">4.9.1.45.</strong> Grace waits for gdb next</a></li><li class="chapter-item "><a href="vision/submitted_stories/status_quo/grace_wants_a_zero_copy_api.html"><strong aria-hidden="true">4.9.1.46.</strong> Grace wants a zero copy API</a></li><li class="chapter-item "><a href="vision/submitted_stories/status_quo/grace_wants_to_integrate_c_api.html"><strong aria-hidden="true">4.9.1.47.</strong> Grace wants to integrate a C-API</a></li><li class="chapter-item "><a href="vision/submitted_stories/status_quo/grace_writes_a_new_fb_service.html"><strong aria-hidden="true">4.9.1.48.</strong> Grace writes a new Facebook service</a></li><li class="chapter-item "><a href="vision/submitted_stories/status_quo/niklaus_simulates_hydrodynamics.html"><strong aria-hidden="true">4.9.1.49.</strong> Niklaus builds a hydrodynamics simulator</a></li><li class="chapter-item "><a href="vision/submitted_stories/status_quo/niklaus_wants_to_share_knowledge.html"><strong aria-hidden="true">4.9.1.50.</strong> Niklaus wants to share knowledge</a></li></ol></li><li class="chapter-item "><a href="vision/submitted_stories/shiny_future.html"><strong aria-hidden="true">4.9.2.</strong> ‚ú® Shiny future</a><a class="toggle"><div>‚ù±</div></a></li><li><ol class="section"><li class="chapter-item "><a href="vision/submitted_stories/shiny_future/template.html"><strong aria-hidden="true">4.9.2.1.</strong> Template</a></li><li class="chapter-item "><a href="vision/submitted_stories/shiny_future/alan_learns_async_on_his_own.html"><strong aria-hidden="true">4.9.2.2.</strong> Alan learns async on his own</a></li><li class="chapter-item "><a href="vision/submitted_stories/shiny_future/alans_trust_in_the_compiler_is_rewarded.html"><strong aria-hidden="true">4.9.2.3.</strong> Alan&#39;s trust in the compiler is rewarded</a></li><li class="chapter-item "><a href="vision/submitted_stories/shiny_future/alan_switches_runtimes.html"><strong aria-hidden="true">4.9.2.4.</strong> Alan switches runtimes</a></li><li class="chapter-item "><a href="vision/submitted_stories/shiny_future/barbara_appreciates_performance_tools.html"><strong aria-hidden="true">4.9.2.5.</strong> Barbara appreciates great performance analysis tools</a></li><li class="chapter-item "><a href="vision/submitted_stories/shiny_future/barbara_enjoys_an_async_sandwich.html"><strong aria-hidden="true">4.9.2.6.</strong> Barbara enjoys an async sandwich</a></li><li class="chapter-item "><a href="vision/submitted_stories/shiny_future/barbara_makes_a_wish.html"><strong aria-hidden="true">4.9.2.7.</strong> Barbara makes a wish</a></li><li class="chapter-item "><a href="vision/submitted_stories/shiny_future/barbara_wants_async_rw.html"><strong aria-hidden="true">4.9.2.8.</strong> Barbara wants async read write</a></li><li class="chapter-item "><a href="vision/submitted_stories/shiny_future/barbara_wants_async_tracing.html"><strong aria-hidden="true">4.9.2.9.</strong> Barbara wants async tracing</a></li><li class="chapter-item "><a href="vision/submitted_stories/shiny_future/grace_debugs_a_crash_dump_again.html"><strong aria-hidden="true">4.9.2.10.</strong> Grace debugs a crash dump again</a></li></ol></li></ol></li></ol></li><li class="chapter-item "><a href="design_docs.html"><strong aria-hidden="true">5.</strong> Design docs</a><a class="toggle"><div>‚ù±</div></a></li><li><ol class="section"><li class="chapter-item "><a href="design_docs/yield_safe.html"><strong aria-hidden="true">5.1.</strong> ‚ö†Ô∏è Yield-safe lint</a></li><li class="chapter-item "><a href="design_docs/stream.html"><strong aria-hidden="true">5.2.</strong> ‚òî Stream trait</a></li><li class="chapter-item "><a href="design_docs/generator_syntax.html"><strong aria-hidden="true">5.3.</strong> ‚ö° Generator syntax</a></li><li class="chapter-item "><a href="design_docs/async_read_write.html"><strong aria-hidden="true">5.4.</strong> üìù AsyncRead, AsyncWrite traits</a></li><li class="chapter-item "><a href="design_docs/async_fn_in_traits.html"><strong aria-hidden="true">5.5.</strong> üß¨ Async fn in traits</a></li><li class="chapter-item "><a href="design_docs/mutex.html"><strong aria-hidden="true">5.6.</strong> üîí Mutex (future-aware)</a></li><li class="chapter-item "><a href="design_docs/channels.html"><strong aria-hidden="true">5.7.</strong> üì∫ Async aware channels</a></li><li class="chapter-item "><a href="design_docs/async_closures.html"><strong aria-hidden="true">5.8.</strong> üì¶ Async closures</a></li><li class="chapter-item "><a href="design_docs/join.html"><strong aria-hidden="true">5.9.</strong> ü§ù Join combinator</a></li><li class="chapter-item "><a href="design_docs/select.html"><strong aria-hidden="true">5.10.</strong> ü§∑‚Äç‚ôÄÔ∏è Select combinator</a></li><li class="chapter-item "><a href="design_docs/sink_trait.html"><strong aria-hidden="true">5.11.</strong> üö∞ Sink trait</a></li><li class="chapter-item "><a href="design_docs/async_main.html"><strong aria-hidden="true">5.12.</strong> üéá Async main</a></li><li class="chapter-item "><a href="design_docs/async_drop.html"><strong aria-hidden="true">5.13.</strong> üóëÔ∏è Async drop</a><a class="toggle"><div>‚ù±</div></a></li><li><ol class="section"><li class="chapter-item "><a href="design_docs/async_lifecycle.html"><strong aria-hidden="true">5.13.1.</strong> ‚ôªÔ∏è Async lifecycle</a></li></ol></li><li class="chapter-item "><a href="design_docs/completion_based_futures.html"><strong aria-hidden="true">5.14.</strong> ‚è≥ Completion-based futures</a></li><li class="chapter-item "><a href="design_docs/async_stack_traces.html"><strong aria-hidden="true">5.15.</strong> ü•û Async Stack Traces</a></li></ol></li><li class="chapter-item "><a href="conversations.html"><strong aria-hidden="true">6.</strong> Conversations</a><a class="toggle"><div>‚ù±</div></a></li><li><ol class="section"><li class="chapter-item "><a href="conversations/2021-02-12-Twitter-Thread.html"><strong aria-hidden="true">6.1.</strong> 2021-02-12 Twitter thread</a></li></ol></li><li class="chapter-item "><a href="glossary.html"><strong aria-hidden="true">7.</strong> Glossary</a></li><li class="chapter-item "><a href="acknowledgments.html"><strong aria-hidden="true">8.</strong> Acknowledgments</a></li></ol>';
        // Set the current, active page, and reveal it if it's hidden
        let current_page = document.location.href.toString().split("#")[0];
        if (current_page.endsWith("/")) {
            current_page += "index.html";
        }
        var links = Array.prototype.slice.call(this.querySelectorAll("a"));
        var l = links.length;
        for (var i = 0; i < l; ++i) {
            var link = links[i];
            var href = link.getAttribute("href");
            if (href && !href.startsWith("#") && !/^(?:[a-z+]+:)?\/\//.test(href)) {
                link.href = path_to_root + href;
            }
            // The "index" page is supposed to alias the first chapter in the book.
            if (link.href === current_page || (i === 0 && path_to_root === "" && current_page.endsWith("/index.html"))) {
                link.classList.add("active");
                var parent = link.parentElement;
                if (parent && parent.classList.contains("chapter-item")) {
                    parent.classList.add("expanded");
                }
                while (parent) {
                    if (parent.tagName === "LI" && parent.previousElementSibling) {
                        if (parent.previousElementSibling.classList.contains("chapter-item")) {
                            parent.previousElementSibling.classList.add("expanded");
                        }
                    }
                    parent = parent.parentElement;
                }
            }
        }
        // Track and set sidebar scroll position
        this.addEventListener('click', function(e) {
            if (e.target.tagName === 'A') {
                sessionStorage.setItem('sidebar-scroll', this.scrollTop);
            }
        }, { passive: true });
        var sidebarScrollTop = sessionStorage.getItem('sidebar-scroll');
        sessionStorage.removeItem('sidebar-scroll');
        if (sidebarScrollTop) {
            // preserve sidebar scroll position when navigating via links within sidebar
            this.scrollTop = sidebarScrollTop;
        } else {
            // scroll sidebar to current active section when navigating via "next/previous chapter" buttons
            var activeSection = document.querySelector('#sidebar .active');
            if (activeSection) {
                activeSection.scrollIntoView({ block: 'center' });
            }
        }
        // Toggle buttons
        var sidebarAnchorToggles = document.querySelectorAll('#sidebar a.toggle');
        function toggleSection(ev) {
            ev.currentTarget.parentElement.classList.toggle('expanded');
        }
        Array.from(sidebarAnchorToggles).forEach(function (el) {
            el.addEventListener('click', toggleSection);
        });
    }
}
window.customElements.define("mdbook-sidebar-scrollbox", MDBookSidebarScrollbox);
